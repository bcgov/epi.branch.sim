% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting_functions.R
\name{plot_iso_case_counts}
\alias{plot_iso_case_counts}
\title{Generates cumulative and daily counts plot object}
\usage{
plot_iso_case_counts(
  results,
  start_date,
  end_date,
  title_string = "",
  max_y_cum = NULL,
  max_y_daily = NULL,
  log_y_cum = FALSE,
  log_y_daily = FALSE,
  plot_reported = FALSE,
  label_projected = "Projected counts",
  label_reported = "Reported counts",
  dark_quantiles = c(0.25, 0.75),
  light_quantiles = c(0.05, 0.95),
  legend_pos = c(0.25, 0.75)
)
}
\arguments{
\item{results}{A tibble with required columns described here}

\item{start_date}{Start of x-axis, string in "YYYY-MM-DD" format}

\item{end_date}{End of x-axis, string in "YYYY-MM-DD" format}

\item{title_string}{Title of plot}

\item{max_y_cum, max_y_daily}{Upper limit on y-axis of cumulative and daily plots,
defaults to \code{NULL}, which sets limit based on data}

\item{log_y_cum, log_y_daily}{If \code{TRUE}, uses a log scale for y-axis on
cumulative and daily plots. Defaults to \code{FALSE}}

\item{plot_reported}{Plots reported counts if \code{TRUE}. If used, \code{results}
must have \code{reported} and \code{reported_daily} as columns.}

\item{label_projected}{Label for curves showing model predicted case counts}

\item{label_reported}{Label for curves showing reported case counts}

\item{dark_quantiles}{Quantile limits to use for darker shade. Default: c(0.25,0.75)}

\item{light_quantiles}{Quantile limits to use for lighter shade. Default: c(0.05,0.95)}

\item{legend_pos}{Vector for legend position, relative to plot axis. Default: c(0.25,0.75)}
}
\value{
A ggplot object with two individual plots showing cumulative case counts (top) and
daily new case counts (bottom) as a function of time.
}
\description{
This function creates a two-panel figure. The top panel shows the cumulative case
counts and the bottom shows the daily new case counts. The x-axis for both is the
date. The required input parameter, \code{results} is a \code{tibble} with the
following columns:
\itemize{
\item date (\code{\link[base]{Dates}} objects),
\item n.iso (integer, total number of isolated cases on given day)
\item dn.iso (integer, number of new isolated cases on a given day)
\item reported (integer, number of total reported cases on a given day)
\item reported_daily (integer, number of new reported cases on a given day)
}
}
\details{
The dataframe that is returned by \code{\link{run_scenarios}} can be
used as a starting point to build the \code{results} tibble needed for input to this
function. The \code{day} column from the \code{\link{run_scenarios}} output is the
day number in the simulation and can be converted to a \code{\link[base]{Dates}} object
with a real calendar date using
\preformatted{
 results <- as_tibble(results) \%>\%
   mutate(date=lubridate::as_date("2020-03-01")+lubridate::days(day)) \%>\%
   mutate_at(c("R0","initial_n","p.trace","p.symp"),as.factor)
}
where March 1, 2020 is simulation day 0 in this example. The column \code{dn.iso} can be
computed from \code{n.iso} using
\preformatted{
dn.iso <- diff(results$n.iso) # the first entry (day 0) will be negative
dn.iso <- c(0,dn.iso) # diff returns length n-1, add 0 to first position
dn.iso[dn.iso<0] <- 0 # set the day 0 to zero
results$dn.iso <- dn.iso
}
Finally, if using \code{plot_reported=TRUE}, then to add the \code{reported} column,
it would be a good idea to use \code{NA} for the dates you don't want to plot as well
as future dates where reported counts are not available. The \code{reported_daily}
column can be computed in a similar way to the \code{dn.iso} example above.
}
